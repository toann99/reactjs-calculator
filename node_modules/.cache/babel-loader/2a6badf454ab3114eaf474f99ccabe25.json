{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toan Chelsea\\\\Desktop\\\\react\\\\src\\\\components\\\\Button.tsx\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst colorToCss = color => {\n  switch (color) {\n    case 'White':\n      return css`\n        background-color: #c5c5c5;\n        color: rgb(0, 0, 0);\n      `;\n\n    case 'Orange':\n      return css`\n        background-color: #e68d10;\n        color: #FFFFFF;\n      `;\n  }\n\n  return css`\n    background-color: #c5c5c5;\n    color: #FFFFFF;\n  `;\n};\n\nexport const StyledButton = styled.button`\n  font-family: Arial;\n  font-size: 20px;\n  border: 1px solid rgba(0, 0, 0, 0);\n  border-radius: 0;\n  padding-top: 1em;\n  padding-bottom: 1em;\n  transition: background-color 0.15s ease-in-out, opacity 0.15s ease-in-out;\n  ${({\n  color\n}) => colorToCss(color)}\n  ${({\n  isLarge\n}) => isLarge && css`\n      grid-column-start: span 2;\n    `}\n\n  position: relative;\n  overflow: hidden;\n  transform: translate3d(0, 0, 0);\n\n  &:focus {\n    outline: 0;\n  }\n\n  :after {\n    content: '';\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    pointer-events: none;\n    background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);\n    background-repeat: no-repeat;\n    background-position: 50%;\n    transform: scale(10, 10);\n    opacity: 0;\n    transition: transform 0.3s, opacity 1s;\n  }\n\n  :active:after {\n    transform: scale(0, 0);\n    opacity: 0.2;\n    transition: 0s;\n  }\n`;\nexport const Button = ({\n  children,\n  color,\n  isLarge,\n  onClick\n}) => {\n  return /*#__PURE__*/React.createElement(StyledButton, {\n    color: color,\n    isLarge: isLarge,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default Button;","map":{"version":3,"sources":["C:/Users/Toan Chelsea/Desktop/react/src/components/Button.tsx"],"names":["React","styled","css","colorToCss","color","StyledButton","button","isLarge","Button","children","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAEA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;;AAQA,MAAMC,UAAU,GAAIC,KAAD,IAAiC;AAClD,UAAQA,KAAR;AACE,SAAK,OAAL;AACE,aAAOF,GAAI;;;OAAX;;AAIF,SAAK,QAAL;AACE,aAAOA,GAAI;;;OAAX;AAPJ;;AAaA,SAAOA,GAAI;;;GAAX;AAID,CAlBD;;AAoBA,OAAO,MAAMG,YAAY,GAAGJ,MAAM,CAACK,MAAoB;;;;;;;;IAQnD,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeD,UAAU,CAACC,KAAD,CAAQ;IACjC,CAAC;AAAEG,EAAAA;AAAF,CAAD,KACAA,OAAO,IACPL,GAAI;;KAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAbC;AA+CP,OAAO,MAAMM,MAAsC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYL,EAAAA,KAAZ;AAAmBG,EAAAA,OAAnB;AAA4BG,EAAAA;AAA5B,CAAD,KAA2C;AAC/F,sBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEN,KAArB;AAA4B,IAAA,OAAO,EAAEG,OAArC;AAA8C,IAAA,OAAO,EAAEG,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CANM;AAQP,eAAeD,MAAf","sourcesContent":["import React, { FunctionComponent } from 'react'\r\n\r\nimport styled, { css } from 'styled-components'\r\n\r\ninterface ButtonProps {\r\n  color?:| 'White' | 'Orange'\r\n  isLarge?: boolean\r\n  onClick?: () => void\r\n}\r\n\r\nconst colorToCss = (color: ButtonProps['color']) => {\r\n  switch (color) {\r\n    case 'White':\r\n      return css`\r\n        background-color: #c5c5c5;\r\n        color: rgb(0, 0, 0);\r\n      `\r\n    case 'Orange':\r\n      return css`\r\n        background-color: #e68d10;\r\n        color: #FFFFFF;\r\n      `\r\n  }\r\n\r\n  return css`\r\n    background-color: #c5c5c5;\r\n    color: #FFFFFF;\r\n  `\r\n}\r\n\r\nexport const StyledButton = styled.button<ButtonProps>`\r\n  font-family: Arial;\r\n  font-size: 20px;\r\n  border: 1px solid rgba(0, 0, 0, 0);\r\n  border-radius: 0;\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n  transition: background-color 0.15s ease-in-out, opacity 0.15s ease-in-out;\r\n  ${({ color }) => colorToCss(color)}\r\n  ${({ isLarge }) =>\r\n    isLarge &&\r\n    css`\r\n      grid-column-start: span 2;\r\n    `}\r\n\r\n  position: relative;\r\n  overflow: hidden;\r\n  transform: translate3d(0, 0, 0);\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  :after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    pointer-events: none;\r\n    background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);\r\n    background-repeat: no-repeat;\r\n    background-position: 50%;\r\n    transform: scale(10, 10);\r\n    opacity: 0;\r\n    transition: transform 0.3s, opacity 1s;\r\n  }\r\n\r\n  :active:after {\r\n    transform: scale(0, 0);\r\n    opacity: 0.2;\r\n    transition: 0s;\r\n  }\r\n`\r\n\r\nexport const Button: FunctionComponent<ButtonProps> = ({ children, color, isLarge, onClick }) => {\r\n  return (\r\n    <StyledButton color={color} isLarge={isLarge} onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default Button\r\n"]},"metadata":{},"sourceType":"module"}